swagger: "2.0"
host: "127.0.0.1:5000"
basePath: "/api/v1/"
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - api_token: []
  - bearer: []
info:
  version: 1.0
  title: Fast Food Fast
  license:
    name: Apache
    url: https://www.apache.org/licenses/LICENSE-2.0.html
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/register:
    post:
      summary: Register a new user
      operationId: registerUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserSignup'
      responses:
        201:
          description: created
        400:
          description: bad request
        401:
          description: unauthorized
        409:
          description: conflict
        500:
          description: internal server error
      tags:
        - Users

  /auth/login:
    post:
      summary: Register a new user
      operationId: registerUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error
      tags:
        - Users

  /users:
    get:
      summary: Fetch all registered users
      operationId: getUsers
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error
      tags:
        - Users

  /users/{user_id}:
    get:
      summary: Get a single user by id
      operationId: getUser
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      - name: user_id
        required: true
        in: query
        type: string
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error
      tags:
        - Users

  /orders:
    get:
      tags:
        - Orders
      summary: List all orders
      operationId: listOrders
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

    post:
      tags:
        - Orders
      summary: Create a new order
      operationId: addOrder
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      - name: payload
        required: true
        in: body
        type: string
        schema:
            $ref: '#/definitions/Orders'
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

    delete:
      tags:
        - Orders
      summary: Delete all orders
      operationId: deleteOrders
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

  /orders/{order_id}:
    get:
      tags:
        - Orders by Id
      summary: Get a single order by id
      operationId: listOrders
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      - name: order_id
        required: true
        in: query
        type: string
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

    put:
      tags:
        - Orders by Id
      summary: Update an order
      operationId: updateOrder
      parameters:
        - name: token
          in: header
          description: enter token
          required: true
        - name: order_id
          in: path
          description: order_id needs to be placed in
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

    patch:
      tags:
        - Orders by Id
      summary: Update an order single value
      operationId: updateStatus
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      - name: order_id
        required: true
        in: query
        type: string
      - name: status
        in: query
        description: Update status
        required: true
        type: array
        default: Pending
        enum:
        - Pending
        - Accepted
        - Declined
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server error

    delete:
      tags:
        - Orders by Id
      summary: Deletes an order by Id
      operationId: deleteOrder
      parameters:
      - name: access-token
        in: header
        type: string
        required: true
      - name: order_id
        required: true
        in: query
        type: string
      responses:
        200:
          description: ok
        400:
          description: bad request
        401:
          description: unauthorized
        403:
          description: forbidden status
        404:
          description: not found
        500:
          description: internal server errorde


definitions:
  UserSignup:
      type: object
      properties:
        username:
          description: username for user
          type: string
          example: tester
        email:
          description: email for user
          type: string
          example: test@gmail.com
        password:
          description: password for user
          type: string
          example: test1234
        confirm_password:
          description: confirmation password
          type: string
          example: test1234

  UserLogin:
      type: object
      properties:
        email:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: test1234

  Orders:
      type: object
      properties:
        order_id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Burger
        quantity:
          type: string
          example: 4
        price:
          type: string
          example: 1000
        created_by:
          type: string
          example: Francis Masha
